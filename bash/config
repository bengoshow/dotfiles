function hg {
  history | grep --color=auto $1
}

function al {
  awk "/#\[$1-start\]/,/#\[$1-end\]/ { print }" ~/git-repos/dotfiles/bash/aliases
}

function vhost {
  sudo ~/git-repos/dotfiles/osx/mamp_vh.sh $1
}

function init {
  local RED="\033[0;31m"
  local NC="\033[0m"
 
  if [ ! $# = 1 ]; then
    echo -e "${RED}Please specify a project name, or action (update, revert).${NC}"
    echo -e "Usage: init project-name / action\n"
  elif [ "$1" = "update" ]; then
    mv package.json package.bak.json;
    mv node_modules node_modules_bak;
    curl -sSOL http://raw.github.com/sparkbox/project-init/master/package.json;
    npm install;
  elif [ "$1" = "revert" ]; then
    if [ -e node_modules_bak -a -e package.bak.json ]; then
      rm -r node_modules;
      rm package.json;
      mv node_modules_bak node_modules;
      mv package.bak.json package.json;
    fi
  else
    echo -e "${RED}Downloading project-init${NC} ðŸš€\n"
    curl -s -S -O -L http://github.com/sparkbox/project-init/archive/master.zip;
    echo -e "${RED}Download finished.${NC}\n"
    echo -e "${RED}Setting up project config files.${NC}\n"
    unzip -qq master.zip;
    rm master.zip;
    mv project-init-master $1
    sed -i.bak "s/Project-Name/$1/g" $1/package.json;
    rm $1/package.json.bak;
    sed -i.bak "s/Project-Name/$1/g" $1/.rvmrc;
    rm $1/.rvmrc.bak;
    cd $1
    npm install;
    bundle;
    echo -e "${RED}Your project is all ready to go. Enjoy${NC}\n"
  fi
}

function ip {
  IP=$(ifconfig | grep 'inet 1' | cut -c 6- | awk 'NR==2 {print $1}')
  echo $IP
  echo $IP | pbcopy
}

function take {
  mkdir $1
  cd $1
}
function tell {
  cd $1
  ls -l
}
function rvm_install {
  rvm install $1 --with-gcc=clang
}
function migrate {
  rake db:migrate
  rake db:test:prepare
}

parse_git_branch () {
  # git name-rev HEAD 2> /dev/null | sed 's#HEAD\ \(.*\)# (git::\1)#'
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Spin up a simple web server
function pyserver {
  python -m SimpleHTTPServer $1
}

# find shorthand
function f() {
    find . -name "$1"
}

# take this repo and copy it to somewhere else minus the .git stuff.
function gitexport() {
  mkdir -p "$1"
  git archive master | tar -x -C "$1"
}

# Pretty git logs
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"

# Always use color output for `ls`
if [[ "$OSTYPE" =~ ^darwin ]]; then
  export LSCOLORS=gxfxcxdxbxegedabagacad
  alias ls="command ls -G"
else
  alias ls="command ls --color"
  export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
fi

# Change the default shell prompt
#function myPrompt {
#  BLACK="\[\033[0;38m\]"
#  RED="\[\033[0;31m\]"
#
#  PS1="\u@\h:\w$RED\$(parse_git_branch)$BLACK\nâ‡’ "
#}
#myPrompt